Stage 3:
----------
milestone:
	Spring data jpa

how did you access database form a java code?
	jdbc
	JdbcTemplate	(spring)

EJB
	entity framework

	spring
	hibernate
		is purely only for model
		model	
			data definition
			data access

	HibernateTemplate

spring boot
	Spring Data JPA
		very less configuration
		easy configuration		no need of xml configuration

		application.properties		(spring boot project)

configure the data source in application.properties.
	without which, we cannot even run a spring boot application (where spring data jpa dependendency is added)



spring.datasource.url=jdbc:mysql://localhost:3306/jfs004
spring.datasource.username=root
spring.datasource.password=



JPA 
	Java Persistence API
	concept

based on this concept, lot of frameworks have evolved
	EJB entity framework
	JPA framework
	Hibernate framework
	Spring data jpa


all these frameworks have something common.

@Entity
	use this annotation to mark a class as entity class
	what is entity?
		in E-R diagram, you see rectangles/boxes

	those are entities. They become, table in the database and Classes in java

those entity classes, are mapped to table in db

ORM
	Object Relational Mapping

if we mark a class as @Entity
then jpa will be able to create the table automatically


spring.jpa.hibernate.ddl-auto=update

	new
	create
	update

i choose "update"
	if table is not there, it will create
	if table is there, if any difference is found, it will alter the table
	if table is there, no diff is found, no change is done

update


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.OracleDialect


dialect means slang in a language

SQL is a common language but there are different dialects
	Oracle SQL
	MySql
	

if you choose a dialect, then the sql queries are generated in that dialect

table name/ column name

JavaStudent is the class name
JAVA_STUDENT is the table name

why underscore? because, S is in capital
this is the basic behavior of ddl auto

if you do not want this behavior, and want exact spelling of java classname/variable name to be the table name / columnn ame

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl



1) entity
2) repository
3) service
4) controller



